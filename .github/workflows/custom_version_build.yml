name: Release GKI Kernel

on:
  workflow_dispatch:
    inputs:
      kernel_config:
        description: 'Kernel config in format "android_version-kernel_version-sub_level-os_patch_level" e.g: android13-5.15-123-2023-07'
        type: string
        required: true
      kernelsu_variant:
        description: 'KernelSU Variant'
        type: choice
        options:
          - Official
          - Next
          - MKSU
          - SukiSU
        required: true
        default: 'Official'
      kernelsu_branch:
        description: 'KernelSU Branch'
        type: choice
        options:
          - Stable(标准)
          - Dev(开发)
        required: true
        default: 'Stable(标准)'
      revision:
        description: 'Revision (for android12 only)'
        type: string
        default: ''
      version:
        description: 'Custom version string'
        type: string
        default: ''
      use_zram:
        description: 'Enable ZRAM optimizations'
        type: boolean
        default: true
      use_kpm:
        description: 'Enable Kernel Patch Module'
        type: boolean
        default: true
      supp_op:
        description: 'Support OnePlus devices'
        type: boolean
        default: false
      set_defbbr:
        description: 'Set BBR as default congestion algorithm'
        type: boolean
        default: true

jobs:
  parse-config:
    runs-on: ubuntu-latest
    outputs:
      android_version: ${{ steps.parse.outputs.android_version }}
      kernel_version: ${{ steps.parse.outputs.kernel_version }}
      sub_level: ${{ steps.parse.outputs.sub_level }}
      os_patch_level: ${{ steps.parse.outputs.os_patch_level }}
    steps:
      - name: Parse Kernel Config
        id: parse
        run: |
          # Split the input string into components
          IFS='-' read -r android_version kernel_version sub_level os_patch_level <<< "${{ github.event.inputs.kernel_config }}"
          
          # Validate we got exactly 4 components
          if [ -z "$android_version" ] || [ -z "$kernel_version" ] || [ -z "$sub_level" ] || [ -z "$os_patch_level" ]; then
            echo "❌ Invalid format! Expected: android_version-kernel_version-sub_level-os_patch_level"
            echo "Example: android13-5.15-123-2023-07"
            exit 1
          fi
          
          echo "Parsed values:"
          echo "Android: $android_version"
          echo "Kernel: $kernel_version"
          echo "Sub Level: $sub_level"
          echo "OS Patch: $os_patch_level"
          
          echo "android_version=$android_version" >> $GITHUB_OUTPUT
          echo "kernel_version=$kernel_version" >> $GITHUB_OUTPUT
          echo "sub_level=$sub_level" >> $GITHUB_OUTPUT
          echo "os_patch_level=$os_patch_level" >> $GITHUB_OUTPUT

  build:
    needs: parse-config
    uses: ./.github/workflows/gki-kernel.yml
    with:
      # Convert all boolean values to strings
      make_release: "true"
      android_version: ${{ needs.parse-config.outputs.android_version }}
      kernel_version: ${{ needs.parse-config.outputs.kernel_version }}
      sub_level: ${{ needs.parse-config.outputs.sub_level }}
      os_patch_level: ${{ needs.parse-config.outputs.os_patch_level }}
      kernelsu_variant: ${{ github.event.inputs.kernelsu_variant }}
      kernelsu_branch: ${{ github.event.inputs.kernelsu_branch }}
      revision: ${{ github.event.inputs.revision }}
      version: ${{ github.event.inputs.version }}
      use_zram: ${{ github.event.inputs.use_zram && 'true' || 'false' }}
      use_kpm: ${{ github.event.inputs.use_kpm && 'true' || 'false' }}
      supp_op: ${{ github.event.inputs.supp_op && 'true' || 'false' }}
      set_defbbr: ${{ github.event.inputs.set_defbbr && 'true' || 'false' }}
    secrets: inherit

  release:
    needs: [parse-config, build]
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ github.event.inputs.kernelsu_variant }}_kernel-${{ needs.parse-config.outputs.android_version }}-${{ needs.parse-config.outputs.kernel_version }}-${{ needs.parse-config.outputs.sub_level }}

      - name: List Downloaded Artifacts
        run: |
          echo "Downloaded artifacts:"
          ls -la
          echo "AnyKernel3 zips:"
          ls -la *.zip || echo "No ZIP files found"
          echo "Boot images:"
          ls -la *.img || echo "No IMG files found"

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.parse-config.outputs.android_version }}-${{ needs.parse-config.outputs.kernel_version }}-${{ needs.parse-config.outputs.sub_level }}-${{ needs.parse-config.outputs.os_patch_level }}
          name: "${{ needs.parse-config.outputs.android_version }} ${{ needs.parse-config.outputs.kernel_version }}.${{ needs.parse-config.outputs.sub_level }} (${{ needs.parse-config.outputs.os_patch_level }})"
          body: |
            ### Build Configuration
            - **Android Version**: ${{ needs.parse-config.outputs.android_version }}
            - **Kernel Version**: ${{ needs.parse-config.outputs.kernel_version }}
            - **Sub Level**: ${{ needs.parse-config.outputs.sub_level }}
            - **OS Patch Level**: ${{ needs.parse-config.outputs.os_patch_level }}
            - **KernelSU Variant**: ${{ github.event.inputs.kernelsu_variant }}
            - **KernelSU Branch**: ${{ github.event.inputs.kernelsu_branch }}
            - **Features**:
              - SUSFS: Enabled
              - KernelSU: ${{ github.event.inputs.kernelsu_variant }} (${{ github.event.inputs.kernelsu_branch }})
              - ZRAM: ${{ github.event.inputs.use_zram }}
              - KPM: ${{ github.event.inputs.use_kpm }}
              - OnePlus Support: ${{ github.event.inputs.supp_op }}
              - BBR Default: ${{ github.event.inputs.set_defbbr }}
          draft: false
          prerelease: false
          files: |
            *AnyKernel3.zip
            *.img
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify Release Assets
        run: |
          echo "Release created with assets:"
          gh release view ${{ needs.parse-config.outputs.android_version }}-${{ needs.parse-config.outputs.kernel_version }}-${{ needs.parse-config.outputs.sub_level }}-${{ needs.parse-config.outputs.os_patch_level }} \
            --repo $GITHUB_REPOSITORY \
            --json assets \
            | jq '.assets[].name'
